set-option -g default-command "reattach-to-user-namespace -l fish"

set -g default-terminal "screen-256color"
set -g history-limit 10000

# use VI
set-window-option -g mode-keys vi
unbind p
bind p paste-buffer
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-selection

# Use ctrl-t instead of ctrl-b
unbind C-b
set -g prefix C-t
bind C-t send-prefix

unbind C-f
bind C-f command-prompt "switch-client -t %%"

# kill
unbind K
bind K confirm-before "kill-window"

unbind ^x
bind ^x kill-pane

# reload config
unbind R
bind R source-file ~/.tmux.conf \; display-message "Config reloaded."

unbind ^W
bind ^W split-window -p 25 'vim .' \; swap-pane -D
unbind ^T
bind ^T split-window -p 25

# tile all windows
unbind =
bind = select-layout tiled

# resize panes
unbind +
bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
unbind -
bind - last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

# Set mouse mode on
set -g mouse on

# Tab titles

setw -g monitor-activity on
set -g visual-activity on

set -g set-titles on
set -g set-titles-string '#S: #W'
setw -g automatic-rename

# act like vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind l select-pane -R
# bind -n C-h run "tmux send-keys C-h && (tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"
unbind -n C-h

bind R source-file ~/.tmux.conf \; display-message "Config reloaded."
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
bind-key C-t last-window

# Better name management
bind c new-window \; command-prompt "rename-window '%%'"
bind C new-window
bind , command-prompt "rename-window '%%'"

# Saner splitting.
bind v split-window -h
bind s split-window -v
bind S choose-session

set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
#set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
#set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"
set-option -g status-left ""
set-option -g status-right ""
set-window-option -g automatic-rename on
# set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]"
set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]"